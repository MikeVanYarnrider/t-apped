{{!-- <h1>{{title}}</h1>
<p>Welcome to {{title}}</p> --}}

{{!-- MAP TAG --}}
<div id="mapid"></div>


{{!-- MAP SCRIPT --}}
<script>
  //Map-creation
  let myMap = L.map("mapid", {
    center: [52.52, 13.4],
    zoom: 13
  })

  // GET WELLS !!!!

  const getWells = () => {
    axios.get('/wells').then(response => {
      response.data.forEach(well => {

        const openWellOnClick = (well) => {
          console.log(well.latlng.lat)
          L.popup()
            .setLatLng({
              lat: well.latlng.lat + 0.003,
              lng: well.latlng.lng
            })
            .setContent("hi. This Well is open. You can find it at " + well.latlng)
            .openOn(myMap)
        }

        const closedWellOnClick = (well) => {
          L.popup()
            .setLatLng({
              lat: well.latlng.lat + 0.003,
              lng: well.latlng.lng
            })
            .setContent("Sorry. This Well is closed. You can find it at " + well.latlng)
            .openOn(myMap)
        }

        let closedWell = L.icon({
          iconUrl: 'https://assets.mapquestapi.com/icon/v2/incident-sm@2x.png',
          iconSize: [20, 20],
          iconAnchor: [10, 29],
          popupAnchor: [0, -29]
        });
        let openWell = L.icon({
          iconUrl: 'https://assets.mapquestapi.com/icon/v2/circle-white@2x.png',
          iconSize: [20, 20],
          iconAnchor: [10, 29],
          popupAnchor: [0, -29]
        });

        if (well.availability === "open") {
          new L.marker([well.coordinates.lat, well.coordinates.lng], {
            icon: openWell,
            draggable: false,
            autoPan: true
          })
            .addTo(myMap)
            .on('click', openWellOnClick)

        } else {
          new L.marker([well.coordinates.lat, well.coordinates.lng], {
            icon: closedWell,
            draggable: false,
            autoPan: true
          })
            .addTo(myMap)
            .on('click', closedWellOnClick)

        }
      })
    }).catch(err => {
      console.log(err)
    })
  }

  getWells();


  //Routing-Options Setup
  let dir = MQ.routing.directions();
  //----> ROUTE COORDINATES
  let waterRoute = dir.route({
    locations: [
      "Berlin", //---> [0] = Start
      { latLng: { lat: 52.5, lng: 13.45 } }, //---> [1...] = Waypoints
      "Berlin" //---> [lastElement] = Destination
    ]
  });

  console.log("directions")

  //enable Geolocation at Start
  /*myMap.locate({
    setView: true,
    maxZoom: 16
  });*/

  //Location-Control-Services
  L.control.locate({
    position: 'topleft'
  }).addTo(myMap);

  /*console.log("LDomevent", L.DomEvent)*/

  //display marker at detected location
  function onLocationFound(e) {
    var radius = e.accuracy;
    console.log("LOOK HERE FOR ANSWERS   ", e)
    L.marker(e.latlng).addTo(myMap)
      .bindPopup("You are within " + radius.toFixed(0) + " meters from this point").openPopup();
    L.circle(e.latlng, radius).addTo(myMap);

    //setStartMarker to Geoposition
    /*console.log("dir    hjhjkh", dir)*/

    /*console.log("EEE",e.latlng)
        dir.route({
          locations: [
            {latLng: e.latlng}, //---> [0] = Start
            { latLng: { lat: 52.5, lng: 13.45 } }, //---> [1...] = Waypoints
           {latLng: e.latlng} //---> [lastElement] = Destination
          ]
        });*/
  }
  myMap.on('locationfound', onLocationFound);

  //error message on location detection
  function onLocationError(e) {
    alert(e.message);
  }
  myMap.on('locationerror', onLocationError);


  //Map-Display
  L.tileLayer(
    "https://api.mapbox.com/styles/v1/pascalh91/ck34h68b101fq1co11o7pzrhi/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoicGFzY2FsaDkxIiwiYSI6ImNrMnp5ZXZ5OTBscmozY21xZDV2YnJtbTIifQ.jLPr-gFzHK0Wxf1SE0F3Dg",
    /*"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWppaCIsImEiOiJjanVwb3p2M2kxczk2M3ptcDRlc2cwYTZpIn0.B8dDJ9aejgRYjjc1hh2w1g",*/
    {
      attribution: '',
      maxZoom: 18,
      id: "mapbox.street",
      /*accessToken: "pk.eyJ1IjoibWppaCIsImEiOiJjanVwb3p2M2kxczk2M3ptcDRlc2cwYTZpIn0.B8dDJ9aejgRYjjc1hh2w1g"*/
      accessToken: "pk.eyJ1IjoicGFzY2FsaDkxIiwiYSI6ImNrMnp5ZXZ5OTBscmozY21xZDV2YnJtbTIifQ.jLPr-gFzHK0Wxf1SE0F3Dg"
    }).addTo(myMap);

  //default Map-Design
  /*let mapLayer = MQ.mapLayer();*/
  //Map-Design Options
  /*L.control
    .layers({*/
  /*Map: mapLayer,*/
  /* Hybrid: MQ.hybridLayer(),
   Satellite: MQ.satelliteLayer(),
   Dark: MQ.darkLayer(),
   Light: MQ.lightLayer()
 })
 .addTo(myMap);*/



  /* --------------------------- customized mapicons -------------------------- */
  CustomRouteLayer = MQ.Routing.RouteLayer.extend({
    createStartMarker: function (location, stopNumber) {

      console.log("location, ", location)
      let custom_icon_Start;
      let markerStart;

      custom_icon_Start = L.icon({
        iconUrl: 'https://assets.mapquestapi.com/icon/v2/marker-start@2x.png',
        iconSize: [30, 40],
        iconAnchor: [10, 29],
        popupAnchor: [0, -29]
      });


      markerStart = new L.marker(location.latLng, {
        icon: custom_icon_Start,
        draggable: true,
        autoPan: true
      }).addTo(myMap);

      return markerStart;
    },

    createStopMarker: function (location, stopNumber) {
      var custom_icon;
      let markerStop;
      markerStop = new L.marker(location.latLng, {
        draggable: true,
        autoPan: true
      }).addTo(myMap);
      return markerStop;
    },

    createEndMarker: function (location, stopNumber) {
      let custom_icon_End;
      let markerEnd;

      custom_icon_End = L.icon({
        iconUrl: 'https://assets.mapquestapi.com/icon/v2/marker-end@2x.png',
        iconSize: [30, 40],
        iconAnchor: [10, 29],
        popupAnchor: [0, -29]
      });

      markerEnd = new L.marker(location.latLng, {
        icon: custom_icon_End,
        draggable: true,
        autoPan: true
      }).addTo(myMap);
      return markerEnd;
    }
  });

  //-----> Show Route-Overlay
  myMap.addLayer(new CustomRouteLayer({
    directions: dir,
    fitBounds: true
  }));

  console.log("dir", dir)
  console.log("myMap", myMap)


  /* ---------------------------- show pins on map ---------------------------- */

  /*var markerWell = new L.marker([52.52, 13.4], {
    draggable: false,
    autoPan: true
  }).addTo(myMap);*/

  /*var popup = L.popup();

  function onMapClick(e) {
    popup
      .setLatLng(e.latlng)
      .setContent("You clicked the map at " + e.latlng.toString())
      .openOn(myMap);
  }*/

  /*myMap.on('click', onMapClick);*/





</script>